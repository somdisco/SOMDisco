% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/somobj_doc.R
\name{set_train_order}
\alias{set_train_order}
\title{Set the sample training order}
\usage{
SOMobj$set_train_order(train_order)
}
\arguments{
\item{train_order}{a vector containing the (1-based) indices (i.e., row indices of training data \code{X}) which 
will govern the presentation order during training.}
}
\value{
None, \code{train_order} and \code{user_train_order} are set internally.
}
\description{
Usually during training, sample vectors should be drawn randomly 
(which \link{train_SOM} does by default, and stores a record of the drawing order here). 
If a specific training order is desired (for, e.g., experimental purposes), 
this can be set by calling \code{set_train_order} prior to calling \code{train_SOM}. 
This forces data presentation during SOM training to follow the prescribed ordering.  
If a specific training order is set, it is only valid during the subsequent call to \code{train_SOM}; 
if multiple rounds of training are performed, each with a desired training order, then \code{set_train_order} 
must be called again prior to each call to \code{train_SOM}.
}
\details{
If \code{set_train_order} is called it will override the specification of the \code{nsteps} argument during 
a subsequent call to \code{train_SOM}. That is, the entire set of training data specified by input \code{train_order} will be 
used during SOM training, regardless of the number of training steps requested during the call to \code{train_SOM}.  


The internal logical field \code{user_train_order} tracks whether this function has been called.
}
